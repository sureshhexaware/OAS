openapi: 3.0.0
info: 
  version: 1.0.0
  title: EIC-Admin-Exp-Api
  description: API description
servers: 
  - url: api
    description: API Server Description
paths: 
  /login: 
   post: 
    operationId: postlogin
    tags: 
     - login
    description: Description of path
    requestBody: 
     required: true
     content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/loginInsertRequest'
    parameters: 
     - $ref: '#/components/parameters/TenantIdentifierParam'
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/loginpostResponse'
     '500': 
      description: Internal Server Error
     '404': 
      description: Not found
  /lepAttestations: 
   get: 
    operationId: getlepAttestations
    tags: 
     - lepAttestations
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/assignedQueryParam'
     - $ref: '#/components/parameters/completeQueryParam'
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/lepAttestationsgetResponse'
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /lepAttestation: 
   post: 
    operationId: postlepAttestation
    tags: 
     - lepAttestation
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/lepAttestationpostResponse'
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/LEPAttestationpostResponse'
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /member: 
   put: 
    operationId: putmember
    tags: 
     - member
    description: Description of path
    requestBody: 
     required: true
     content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/memberUpdateRequest'
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /auditLogByNameId: 
   get: 
    operationId: getauditLogByNameId
    tags: 
     - auditLogByNameId
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
  /lepAttestationsByMemberId/{memberId}: 
   get: 
    operationId: getlepAttestationsByMemberId_memberId
    tags: 
     - lepAttestationsByMemberId
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/memberIdParam'
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /AddressChangeRequest: 
   post: 
    operationId: postAddressChangeRequest
    tags: 
     - AddressChangeRequest
    description: Description of path
    requestBody: 
     required: true
     content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/AddressChangeRequestInsertRequest'
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /SSADeductByMemberID/{memberId}: 
   get: 
    operationId: getSSADeductByMemberID_memberId
    tags: 
     - SSADeductByMemberID
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/SSADeductByMemberIDgetResponse'
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /lastLogin/{Username}: 
   get: 
    operationId: getlastLogin_Username
    tags: 
     - lastLogin
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/UsernameParam'
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/lastLogingetResponse'
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /LEPAttestation/{ID}: 
   get: 
    operationId: getLEPAttestation_ID
    tags: 
     - LEPAttestation
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/IDParam'
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /AddressChangeRequest/{addressChangeID}: 
   get: 
    operationId: getAddressChangeRequest_addressChangeID
    tags: 
     - AddressChangeRequest
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/addressChangeIDParam'
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /PreEnrollmentRequest: 
   post: 
    operationId: postPreEnrollmentRequest
    tags: 
     - PreEnrollmentRequest
    description: Description of path
    requestBody: 
     required: true
     content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/PreEnrollmentRequestInsertRequest'
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /AddressChangeRequest/MemberID/{ID}: 
   get: 
    operationId: getAddressChangeRequest_MemberID_ID
    tags: 
     - AddressChangeRequest
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /plan/search: 
   get: 
    operationId: getplan_search
    tags: 
     - plan
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/plangetResponse'
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /disableLogin: 
   post: 
    operationId: postdisableLogin
    tags: 
     - disableLogin
    description: Description of path
    requestBody: 
     required: true
     content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/disableLoginInsertRequest'
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/disableLoginpostResponse'
     '500': 
      description: Internal Server Error
     '404': 
      description: Not found
  /PrintRequest: 
   post: 
    operationId: postPrintRequest
    tags: 
     - PrintRequest
    description: Description of path
    requestBody: 
     required: true
     content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/PrintRequestInsertRequest'
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/PrintRequestpostResponse'
     '500': 
      description: Internal Server Error
     '404': 
      description: Not found
  /AddressChangeRequests: 
   get: 
    operationId: getAddressChangeRequests
    tags: 
     - AddressChangeRequests
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/AddressChangeRequestsgetResponse'
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /notetypes: 
   get: 
    operationId: getnotetypes
    tags: 
     - notetypes
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '500': 
      description: Internal Server Error
     '404': 
      description: Not found
  /user: 
   put: 
    operationId: putuser
    tags: 
     - user
    description: Description of path
    requestBody: 
     required: true
     content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/userUpdateRequest'
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
   post: 
    operationId: postuser
    tags: 
     - user
    description: Description of path
    requestBody: 
     required: true
     content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/userInsertRequest'
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /PrintRequestExport: 
   get: 
    operationId: getPrintRequestExport
    tags: 
     - PrintRequestExport
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/PrintRequestExportgetResponse'
     '500': 
      description: Internal Server Error
     '404': 
      description: Not found
  /eventlog: 
   post: 
    operationId: posteventlog
    tags: 
     - eventlog
    description: Description of path
    requestBody: 
     required: true
     content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/eventlogInsertRequest'
    parameters: 
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/eventlogpostResponse'
     '500': 
      description: Success
      content: 
       application/json: 
                                                    schema:
                                                     type: string
  /PrintRequestTypes/{Who}: 
   get: 
    operationId: getPrintRequestTypes_Who
    tags: 
     - PrintRequestTypes
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/WhoParam'
     - $ref: '#/components/parameters/client_secretParam'
     - $ref: '#/components/parameters/client_idParam'
     - $ref: '#/components/parameters/channelidParam'
    responses: 
     '200': 
      description: Success
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/PrintRequestTypesgetResponse'
     '500': 
      description: Internal Server Error
     '404': 
      description: Not found
components: 
  schemas: 
   loginpostResponse: 
    type: object
    properties: 
     response: 
      type: string
   lepAttestationsgetResponse: 
    type: object
    properties: 
     lepAttestationID: 
      type: string
   lepAttestationpostResponse: 
    type: object
    properties: 
     lepAttestationID: 
      type: string
     lepAttestationID: 
      type: string
   FaultException: 
    type: object
    properties: 
     Errors: 
      type: string
     Messages: 
      type: string
     Exceptions: 
      type: string
     Warnings: 
      type: string
     Success: 
      type: string
   memberpostResponse: 
    type: object
    properties: 
     FaultException: 
      type: object
      $ref: '#/components/schemas/FaultException'
     ResponseDetails: 
      type: object
      $ref: '#/components/schemas/ResponseDetails'
   ResponseDetails: 
    type: object
    properties: 
     PaymentException: 
      type: string
     SsaDeductRequested: 
      type: string
     ProcessPaymentReponse: 
      type: string
     IsBrokerCompliant: 
      type: string
     Member: 
      type: object
      $ref: '#/components/schemas/Member'
   Member: 
    type: object
    properties: 
     MZipCode: 
      type: string
     Email: 
      type: string
     GreenEobReasonCode: 
      type: string
     MCity: 
      type: string
     BWritingCode: 
      type: string
     BrokerID: 
      type: string
     CellPhone: 
      type: string
     CurrentBalance: 
      type: string
     AltMemberId: 
      type: string
     Prefix: 
      type: string
     Gender: 
      type: string
     PlanName: 
      type: string
     PbpId: 
      type: string
     HICN: 
      type: string
     MemberId: 
      type: string
     MailNABPs: 
      type: string
     EnrollmentDate: 
      type: string
     MiddleInitial: 
      type: string
     MBI: 
      type: string
     DOB: 
      type: string
     Phone: 
      type: string
     BrokerAttestation: 
      type: string
     PbpCode: 
      type: string
     DisenrollmentDate: 
      type: string
     MAddress2: 
      type: string
     Status: 
      type: string
     MAddress1: 
      type: string
     PrimaryPharmacy: 
      type: string
     FirstName: 
      type: string
     ZipCode: 
      type: string
     PlanId: 
      type: string
     Address2: 
      type: string
     MState: 
      type: string
     Address1: 
      type: string
     City: 
      type: string
     GroupId: 
      type: string
     Pharmacies: 
      type: string
     MedicareNumber: 
      type: string
     MonthlyPremium: 
      type: string
     AltPhone: 
      type: string
     CMSConfirmationID: 
      type: string
     Year: 
      type: string
     State: 
      type: string
     LastName: 
      type: string
     EGWPDirectBill: 
      type: string
     IsBroker: 
      type: string
   SSADeductByMemberIDgetResponse: 
    type: object
    properties: 
     SSADeductID: 
      type: string
     ExportDate: 
      type: string
     MemberID: 
      type: string
     CreatedBy: 
      type: string
     NameID: 
      type: string
     FirstName: 
      type: string
     CreatedDate: 
      type: string
     ExportedBy: 
      type: string
     LastName: 
      type: string
     MedicareID: 
      type: string
   LEPAttestationpostResponse: 
    type: object
    properties: 
     lepAttestationID: 
      type: string
     lepAttestationID: 
      type: string
   lastLogingetResponse: 
    type: object
    properties: 
     success: 
      type: string
     ipAddress: 
      type: string
     loginDate: 
      type: string
     username: 
      type: string
   type: 
    type: object
    properties: 
     type: 
      type: string
     properties: 
      type: object
   Deductible: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   IsEGWP: 
    type: object
    properties: 
     type: 
      type: string
   PlanYearStages: 
    type: object
    properties: 
     type: 
      type: string
     items: 
      type: object
      $ref: '#/components/schemas/items'
     required: 
      type: string
   items: 
    type: object
    properties: 
     type: 
      type: string
     type: 
      type: string
   PlanId: 
    type: object
    properties: 
     format: 
      type: string
     type: 
      type: string
   StateName: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   DeductibleDescription: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   Deminimis: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   Premium: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   PlanName: 
    type: object
    properties: 
     type: 
      type: string
   PlanDetails: 
    type: object
    properties: 
     type: 
      type: string
     items: 
      type: object
      $ref: '#/components/schemas/items'
     required: 
      type: string
   GroupId: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   PbpDescription: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   Lis50: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   Lis75: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   State: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   Lis100: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   Lis25: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   PlanYear: 
    type: object
    properties: 
     format: 
      type: string
     type: 
      type: string
   SkipDeductable: 
    type: object
    properties: 
     type: 
      type: string
     required: 
      type: string
   Pbp: 
    type: object
    properties: 
     type: 
      type: string
   plangetResponse: 
    type: object
    properties: 
     type: 
      type: object
      $ref: '#/components/schemas/type'
   disableLoginpostResponse: 
    type: object
    properties: 
     AdminDisabledUserID: 
      type: string
   PrintRequestpostResponse: 
    type: object
    properties: 
     PrintRequestId: 
      type: string
   AddressChangeRequestsgetResponse: 
    type: object
    properties: 
     ResponseDetails: 
      type: string
   PrintRequestExportgetResponse: 
    type: object
    properties: 
     printRequests: 
      type: string
   eventlogpostResponse: 
    type: object
    properties: 
     updateCount1: 
      type: string
   PrintRequestTypesgetResponse: 
    type: object
    properties: 
     RequestTypes: 
      type: string
  parameters: 
   TenantIdentifierParam: 
    in: header
    name: TenantIdentifier
    required: false
    schema: 
     type: string
    description: Tenant Identifier
   client_secretParam: 
    in: header
    name: client_secret
    required: true
    schema: 
     type: string
    description: description of parameter passed
   client_idParam: 
    in: header
    name: client_id
    required: true
    schema: 
     type: string
    description: description of parameter passed
   channelidParam: 
    in: header
    name: channelid
    required: false
    schema: 
     type: string
     format: integer | nil
    description: Unique Id to determine the Client
   assignedQueryParam: 
    in: query
    name: assignedQuery
    required: true
    schema: 
     type: boolean
    description: assigned
   completeQueryParam: 
    in: query
    name: completeQuery
    required: true
    schema: 
     type: boolean
    description: complete
   memberIdParam: 
    in: path
    name: memberId
    required: true
    schema: 
     type: string
    description: MemberID
   UsernameParam: 
    in: path
    name: Username
    required: true
    schema: 
     type: string
    description: Username
   IDParam: 
    in: path
    name: ID
    required: true
    schema: 
     type: integer
    description: LEPAttestationID
   addressChangeIDParam: 
    in: path
    name: addressChangeID
    required: true
    schema: 
     type: number
    description: addressChangeID
   WhoParam: 
    in: path
    name: Who
    required: true
    schema: 
     type: string
    description: Who
