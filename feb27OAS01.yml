openapi: 3.0.0
info: 
  version: 1.0.0
  title: EIC-Member-Managment-papi
  description: This API is designed to manage the complex process for Portal User management and process orestration.   This process API layer is designed to handle the more complex process orestration for managing Portal Users. We have intentionally followed the same URIs as exposed in the original Swagger / Open API so there is no need for mapping old name to new URI names. While it would be nice to "clean up" some of the unconventional Resource naming to following the RESTful approach more closely,  keeping the same URIs makes life much easier for developers to call lower level APIs that match the URIs while using the API-Led approach.   
servers: 
  - url: https://hexapi.example.com
    description: API Server Description
paths: 
  /member/pbpChange: 
   post: 
    operationId: post_member_pbpChange_1
    tags: 
     - member
    description: Description of path
    requestBody: 
     required: true
     content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/post_member_pbpChange_1_req'
    parameters: 
     - $ref: '#/components/parameters/TenantIdentifierHeaderParam'
     - $ref: '#/components/parameters/client_idHeaderParam'
     - $ref: '#/components/parameters/client_secretHeaderParam'
    responses: 
     '200': 
      description: OK
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/post_member_pbpChange_1_200_res'
     '500': 
      description: Internal Server Error
  /member/letters/{nameId}: 
   get: 
    operationId: get_member_letters_nameId_2
    tags: 
     - member
    description: Description of path
    parameters: 
     - $ref: '#/components/parameters/nameIdPathParam'
     - $ref: '#/components/parameters/TenantIdentifierHeaderParam'
     - $ref: '#/components/parameters/client_idHeaderParam'
     - $ref: '#/components/parameters/client_secretHeaderParam'
    responses: 
     '200': 
      description: get_member_letters_nameId_2
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/get_member_letters_nameId_2_200_res'
     '404': 
      description: Not found
     '500': 
      description: Internal Server Error
components: 
  schemas: 
   post_member_pbpChange_1_200_res: 
    title : post_member_pbpChange_1_200_res
    type: object
    properties: 
     id: 
      type: string
     rowsAffected: 
      type: number
     lastUpdatedDate: 
      type: string
      format: date-time
     actionSetCount: 
      type: number
     nextCardId: 
      type: string
     success: 
      type: boolean
     statusCode: 
      type: number
     actionSetErrors: 
      type: array
      items: 
       type: string
     errors: 
      type: array
      items: 
       type: string
     truthTableErrors: 
      type: array
      items: 
       type: string
     userMessages: 
      type: array
      items: 
       type: string
   post_member_pbpChange_1_200_resactionSetErrorsArray: 
    title : post_member_pbpChange_1_200_resactionSetErrorsArray
    type: object
    properties: 
     actionSetErrors: 
      type: string
   post_member_pbpChange_1_200_reserrorsArray: 
    title : post_member_pbpChange_1_200_reserrorsArray
    type: object
    properties: 
     errors: 
      type: string
   post_member_pbpChange_1_200_restruthTableErrorsArray: 
    title : post_member_pbpChange_1_200_restruthTableErrorsArray
    type: object
    properties: 
     truthTableErrors: 
      type: string
   post_member_pbpChange_1_200_resuserMessagesArray: 
    title : post_member_pbpChange_1_200_resuserMessagesArray
    type: object
    properties: 
     userMessages: 
      type: string
   post_member_pbpChange_1_req: 
    title : post_member_pbpChange_1_req
    type: object
    properties: 
     nameId: 
      type: string
     dateOfBirth: 
      type: string
      format: date-time
     currentPackageId: 
      type: string
     effectiveDate: 
      type: string
      format: date-time
     newPackageId: 
      type: string
     premiumWithholdType: 
      type: string
     signatureDate: 
      type: string
      format: date-time
     receivedDate: 
      type: string
      format: date-time
     electionPeriod: 
      type: string
     brokerAttestation: 
      type: string
     loginId: 
      type: string
   letters: 
    title : letters
    type: object
    properties: 
     toDoId: 
      type: string
     templateType: 
      type: string
     templateName: 
      type: string
     letterName: 
      type: string
     dateScheduled: 
      type: string
      format: date-time
     dateCompleted: 
      type: string
      format: date-time
     resultPrimary: 
      type: string
     resultSecondary: 
      type: string
   get_member_letters_nameId_2_200_reslettersArray: 
    title : get_member_letters_nameId_2_200_reslettersArray
    type: object
    properties: 
     letters: 
      type: object
      $ref: '#/components/schemas/letters'
   get_member_letters_nameId_2_200_res: 
    title : get_member_letters_nameId_2_200_res
    type: object
    properties: 
     letters: 
      type: array
      items: 
       $ref: '#/components/schemas/get_member_letters_nameId_2_200_reslettersArray'
  parameters: 
   TenantIdentifierHeaderParam: 
    in: header
    name: TenantIdentifier
    required: false
    schema: 
     type: string
    description: Tenant Identifier
   client_idHeaderParam: 
    in: header
    name: client_id
    required: true
    schema: 
     type: string
    description: description of parameter passed
   client_secretHeaderParam: 
    in: header
    name: client_secret
    required: true
    schema: 
     type: string
    description: description of parameter passed
   nameIdPathParam: 
    in: path
    name: nameId
    required: true
    schema: 
     type: string
    description: nameId
