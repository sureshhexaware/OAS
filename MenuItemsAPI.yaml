openapi: 3.0.0
info: 
  version: 1.0.0
  title: Menu Items
  description: Menu Item APIs V1
servers: 
  - url: https://hexapi.example.com
    description: API Server Description
paths: 
  /menu/{storeid}: 
   get: 
    operationId: getItemsByStoreId
    tags: 
     - menutitem
    summary: Get Menu Items By Store Id
    description: Get Menu Items By Store Id
    parameters: 
     - $ref: '#/components/parameters/storeidParam'
    responses: 
     '200': 
      description: All Menu Items Retrieved
      content: 
       application/json: 
        schema: 
         type: array
         items: 
          $ref: '#/components/schemas/MenuItemsDetailsResponse'
  /store/{storeid}: 
   get: 
    operationId: getStoreByStoreId
    tags: 
     - store
    summary: Get Store Details By Store Id
    description: Get Store Details By Store Id
    parameters: 
     - $ref: '#/components/parameters/storeidParam'
    responses: 
     '200': 
      description: Store Details Retrieved
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/StoreDetailsResponse'
     '404': 
      description: Method not found
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/ErrorResponse'
     '500': 
      description: Internal Server Error
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/ErrorResponse'
  /toppings/{menuid}: 
   get: 
    operationId: getToppingsByMenuId
    tags: 
     - topping
    summary: Get Toppings Array By Menu Id
    description: Get Toppings Array By Menu Id
    parameters: 
     - $ref: '#/components/parameters/menuidParam'
    responses: 
     '200': 
      description: Toppings List Retrieved
      content: 
       application/json: 
        schema: 
         type: array
         items: 
          $ref: '#/components/schemas/ToppingsDetailsResponse'
     '404': 
      description: Method not found
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/ErrorResponse'
     '500': 
      description: Internal Server Error
      content: 
       application/json: 
        schema: 
         $ref: '#/components/schemas/ErrorResponse'
components: 
  schemas: 
   StoreDetailsResponse: 
    type: object
    properties: 
     id: 
      type: string
     name: 
      type: string
     location: 
      type: string
   MenuItemsDetailsResponse: 
    type: object
    properties: 
     id: 
      type: string
     name: 
      type: string
     description: 
      type: string
     createdDateTime: 
      type: string
     updatedDateTime: 
      type: string
     ingredients: 
      type: array
      items: 
       type: string
     image: 
      type: string
     price: 
      type: number
     storeids: 
      type: array
      items: 
       type: string
   ToppingsDetailsResponse: 
    type: object
    properties: 
     id: 
      type: string
     name: 
      type: string
     price: 
      type: number
     menuitemids: 
      type: array
      items: 
       type: string
   MenuItem: 
    type: object
    properties: 
     id: 
      type: string
     name: 
      type: string
     description: 
      type: string
     createdDateTime: 
      type: string
     updatedDateTime: 
      type: string
     ingredients: 
      type: array
      items: 
       type: string
     image: 
      type: string
     price: 
      type: number
     storeids: 
      type: array
      items: 
       type: string
   ErrorResponse: 
    type: object
    properties: 
     code: 
      type: integer
     message: 
      type: string
   Store: 
    type: object
    properties: 
     id: 
      type: string
     name: 
      type: string
     location: 
      type: string
   Topping: 
    type: object
    properties: 
     id: 
      type: string
     name: 
      type: string
     price: 
      type: number
     menuitemids: 
      type: array
      items: 
       type: string
  parameters: 
   storeidParam: 
    in: path
    name: storeid
    required: true
    schema: 
     type: string
    description: Store Id to be passed
   menuidParam: 
    in: path
    name: menuid
    required: true
    schema: 
     type: string
    description: Menu Id to be passed
